<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = .75;
image_yscale = .75;

canBeHit = true;
iframes = 30;
canPew = true;
depth = 10;
x = room_width/2;
y = 4*room_height/5;
attackSpeed = 10;
playerDamage = 1/3;
damageMult = 1;
playerHp = 3;

alarm[1] = attackSpeed;

//Player health and health objects.
for(i = 0; i &lt; playerHp; i++)
{
    heart[i] = instance_create(room_width*(1+global.screenWidthRatio)/2 + 128, 400, obj_health_heart);
    heart[i].x += heart[i].sprite_width*(playerHp-i)*3/2;
}

alarm[9] = room_speed;

global.hasMovedRight = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.time++;

alarm[9] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var new_bullet;
if (canPew) {
    new_bullet = scr_bullet_create(global.theta, 0, y-sprite_height-17, -10, 1, obj_bullet_player, 3, playerDamage*damageMult);
    alarm[1] = attackSpeed;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canBeHit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var animation_speed = .2, move_speed = 10;

if (keyboard_check_direct(vk_shift)) move_speed /= 2;

if (keyboard_check_direct(ord("A"))) {
    if (image_angle &lt; 5) image_angle += animation_speed;
    else image_angle = 5;
    
    global.theta -= move_speed/200;
    background_hspeed[0] = move_speed/2;
} else if (keyboard_check_direct(ord("D"))) {
    if (image_angle &gt; -5) image_angle -= animation_speed;
    else image_angle = -5;
    
    global.theta += move_speed/200;
    background_hspeed[0] = -move_speed/2;
    
    global.hasMovedRight = true;
} else {
    if (image_angle &lt; -animation_speed*2) image_angle += animation_speed*2;
    else if (image_angle &gt; animation_speed*2) image_angle -= animation_speed*2;
    else image_angle = 0;
    
    background_hspeed[0] = 0;
}
if (keyboard_check_direct(ord("W"))) {
    y -= move_speed;
    while (y &lt; 0) y++;
} else 
if (keyboard_check_direct(ord("S"))) {
    y += move_speed;
    while (y &gt; room_height) y--;
}

if (global.theta &gt; 2*pi) global.theta -= 2*pi;
if (global.theta &lt; 0) global.theta += 2*pi;

if(playerHp &lt;= 0) {
    
    playerHp = 3;
    global.victory = false;
    global.score -= round(global.currentBoss.bossHp*100 + global.time*10);
    //achievement die completed
    if(!global.achievement_die)
    {
        global.upgrade_points += 1;
        global.achievement_die = true;
    }
    global.next_room = 1; // we lost, go to end screen
    room_goto(rm_upgrades);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lazor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (canBeHit &amp;&amp; position_meeting(x, y, other)) {
    global.hits += 1;
    playerHp -= 1;
    with (heart[playerHp]) instance_destroy();
    canBeHit = false;
    damageMult = 1;
    alarm[0] = iframes;
    sound_volume(snd_lose_life, 0.25)
    audio_play_sound(snd_lose_life, 10, false)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boss3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerHp = 0;

if(!global.achievement_crash)
{
    global.upgrade_points += 1;
    global.achievement_crash = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boss2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerHp = 0;

if(!global.achievement_crash)
{
    global.upgrade_points += 1;
    global.achievement_crash = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boss1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerHp = 0;

if(!global.achievement_crash)
{
    global.upgrade_points += 1;
    global.achievement_crash = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;

if ((abs(global.theta - other.theta) &lt; pi/2 || abs(global.theta - other.theta) &gt; 3*pi/2)) {
    if (canBeHit &amp;&amp; position_meeting(x, y, other)) {
        for (i = 0; i &lt; other.damage; i++) {
            global.hits += 1;
            playerHp -= 1;
            if (playerHp &lt;= 0) continue;
            with (heart[playerHp]) instance_destroy();
            global.player_hit = true;
            sound_volume(snd_lose_life, 0.25)
            audio_play_sound(snd_lose_life, 10, false)
        }
        
        canBeHit = false;
        damageMult = 1;
        alarm[0] = iframes;
        with (other) instance_destroy();
    } else if (other.scraped == false) {
        other.scraped = true;
        damageMult += .01;
        
        //Check for achievement scrape
        if(damageMult &gt;= 1.5 &amp;&amp; !global.achievement_scrape)
        {
            global.achievement_scrape = true;
            global.upgrade_points += 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var new_bullet;
if (canPew) {
    new_bullet = scr_bullet_create(global.theta, 0, y-sprite_height-17, -10, 5, obj_bullet_player, 3, playerDamage*damageMult);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var precision;

draw_set_colour(c_white);
draw_set_font(fnt_big_num);
draw_set_valign(fa_center);
draw_set_halign(fa_left);

precision = "";
if (global.time % 60 &lt; 10) precision = "0";
global.score = round(global.score);
if (global.fps_count++ % 60 == 0) global.fps_now = fps_real;

draw_text(global.display_scale_x * 64, global.display_scale_y * 64, "Time:  " + string(floor(global.time / 60)) + ":" + precision + string(global.time % 60));
draw_text(global.display_scale_x * 64, global.display_scale_y * 128, "Score:  " + string(global.score));
draw_text(global.display_scale_x * 64, global.display_scale_y * 192, "Multiplier:  " + string(damageMult));

draw_text(global.display_scale_x * (room_width*(1+global.screenWidthRatio)/2 + 64), global.display_scale_y * 320, "PLAYER HEALTH");
draw_text(global.display_scale_x * (room_width*(1+global.screenWidthRatio)/2 + 64), global.display_scale_y * 480, "AMMO");

draw_set_font(-1);
draw_set_color(c_green);
draw_set_halign(fa_right);

if (global.fps_enabled) {
  draw_text(room_width - global.display_scale_x * 32, global.display_scale_y * 32, global.fps_now);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="10" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movingRight = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movingLeft = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
