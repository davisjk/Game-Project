<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>realy = y;
scraped = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = (room_width/2) - (sin(global.theta-theta)*(room_width*global.screenWidthRatio/2));

realy += dy;
if (realy &gt; room_height) instance_destroy();
if (realy &lt; 0) instance_destroy();
y = realy + (16+16*cos(global.theta-theta));

colourForBlend = 255-((0.5-(cos(global.theta-theta))/2)*125);
image_blend = make_color_rgb(colourForBlend, colourForBlend, colourForBlend);

theta = theta + dtheta;
if (theta &gt; 2*pi) theta -= 2*pi;
if (theta &lt; 0) theta += 2*pi;

depth = -(cos(global.theta-theta))*100;

image_xscale = scale * (cos(global.theta-theta)+3)/2;
image_yscale = image_xscale;

// change the direction the bullet is facing when it 
// moves to the opposite side of the cylinder
if ((image_index == 12 &amp;&amp; depth &lt; 0 &amp;&amp; dtheta &gt; 0) || 
    (image_index == 12 &amp;&amp; depth &gt; 0 &amp;&amp; dtheta &lt; 0)) {
    image_index = 16;
}
if ((image_index == 13 &amp;&amp; depth &lt; 0 &amp;&amp; dtheta &gt; 0) || 
    (image_index == 13 &amp;&amp; depth &gt; 0 &amp;&amp; dtheta &lt; 0)) {
    image_index = 15;
}
if ((image_index == 16 &amp;&amp; depth &lt; 0 &amp;&amp; dtheta &lt; 0) || 
    (image_index == 16 &amp;&amp; depth &gt; 0 &amp;&amp; dtheta &gt; 0)) {
    image_index = 12;
}
if ((image_index == 15 &amp;&amp; depth &lt; 0 &amp;&amp; dtheta &lt; 0) || 
    (image_index == 15 &amp;&amp; depth &gt; 0 &amp;&amp; dtheta &gt; 0)) {
    image_index = 13;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
