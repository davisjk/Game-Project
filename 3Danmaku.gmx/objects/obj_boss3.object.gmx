<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blue_boss_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = room_width/2;
y = room_height/4;
bossHp = 100;
alarm_separation = 10;
depth = 11;
image_xscale = 0.8;
image_yscale = 0.8;
bulletPattern = 0;
lazorz = 3;
lazorTheta = pi/lazorz-pi/2;
lazorDTheta = pi/1080;
ccw = true;
theta = global.theta;
moveSpeed = 0.01;
dy = 2;

alarm[1] = 5;

/* Boss's healthbar */
barOutline = instance_create(1450, 70, obj_healthbar_outline);
barFill = instance_create(1450, 70, obj_healthbar_fill);
barFill.depth = -100;
barOutline.depth = -101;
barFill.image_yscale = 0.6;
barOutline.image_yscale = 0.6;

bulletPattern = 0;
safespot = 0;
startedphase = false;

//For damage achievement
hitBy = 0;
alarm[4] = 1;

//player hasn't been hit yet
global.player_hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hitBy = 0;
alarm[4] = room_speed/8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Phase 1

var i, lx = x, ly = y, new_lazor;

for (i = instance_number(obj_lazor)-1; i &gt;= 0; i--) {
    with (instance_find(obj_lazor,i)) instance_destroy();
}

/* Initialize data for a new arc */
if (startedphase == false || arc_i == 13) {
    startedphase = true;
    arc_i = 0;
    arc_center = random_range(0, 2*pi);
    dtheta = 0;
    y0 = y+sprite_height/2-20;
    bullet_dy = 7;
    size = 1;
    obj = obj_bullet_enemy;
    img = irandom_range(4, 7);
    dmg = 1;
}


/* Create arcs */
if (arc_i &lt; 10) {
    scr_bullet_create(arc_center+arc_i/10, dtheta, y0, bullet_dy, size, obj, img, dmg);
    scr_bullet_create(arc_center-arc_i/10, dtheta, y0, bullet_dy, size, obj, img, dmg);
}
arc_i++; // setup for next arc

for (i = 0; i &lt; lazorz; i++) {
    while (lx &gt;= 0 &amp;&amp; ly &gt;= 0 &amp;&amp; lx &lt;= room_width &amp;&amp; ly &lt;= room_height) {
        new_lazor = scr_lazor_create(lx, ly, radtodeg(lazorTheta+pi/2));
        lx += cos(lazorTheta)*new_lazor.sprite_width;
        ly -= sin(lazorTheta)*new_lazor.sprite_height;
    }
    lazorTheta += 2*pi/lazorz;
    lx = x;
    ly = y;
}
lazorTheta -= 2*pi;

lazorTheta += lazorDTheta;

if (lazorTheta &gt; pi/lazorz-pi/2+pi/lazorz/2 &amp;&amp; ccw) {
    show_debug_message(string(radtodeg(lazorTheta)));
    lazorDTheta = -lazorDTheta;
    ccw = false;
}

if (lazorTheta &lt; -pi/lazorz+(pi/lazorz-pi/2+pi/lazorz/2) &amp;&amp; !ccw) {
    show_debug_message(string(radtodeg(lazorTheta)));
    lazorDTheta = -lazorDTheta;
    ccw = true;
    
    for (i = instance_number(obj_lazor)-1; i &gt;= 0; i--) {
        with (instance_find(obj_lazor,i)) instance_destroy();
    }
    
    lazorz++;
    lazorTheta = pi/lazorz-pi/2;
    alarm[1] = 15;
}
else {
    alarm[1] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var animation_speed = .2;

x = (room_width/2) - (sin(global.theta-theta)*(room_width*global.screenWidthRatio/2-sprite_width/2));

if (abs(theta) &gt; pi) {
    moveSpeed = -moveSpeed
}
theta += moveSpeed;

if (y &lt; room_height/4 || y &gt; room_height/3) {
    dy = -dy;
}
y += dy;

barFill.image_xscale = bossHp / 100;

if (bossHp &lt;= 0) {
    global.victory = true;
    global.score -= round(global.time*10);
    
    //we killed this boss
    if(!global.achievement_third_kill)
    {
        global.upgrade_points += 1;
        global.achievement_third_kill = true;
    }
    
    //we never got hit
    if(!global.player_hit &amp;&amp; !global.achievement_ghost)
    {
        global.upgrade_points += 1;
        global.achievement_ghost = true;
    }
    
    //we killed this boss with a score greater than 45000
    if(global.score &gt; 45000 &amp;&amp; !global.achievement_score_three)
    {
        global.upgrade_points += 1;
        global.achievement_score_three = true;
    }
    
    //we killed this boss in under 120 seconds
    if(global.time &lt; 120 &amp;&amp; !global.achievement_speed_three)
    {
        global.upgrade_points += 1;
        global.achievement_speed_three = true;
    }
    
    //we didn't move right
    if(!global.hasMovedRight &amp;&amp; !global.achievement_left)
    {
        global.upgrade_points += 1;
        global.achievement_left = true;
    }
    
    global.next_room = 4; //we won, go to end screen
    room_goto(rm_upgrades);
}

/* Boss animation */

if (keyboard_check(ord("D"))) {
    if (image_angle &lt; 3) image_angle += animation_speed;
    else image_angle = 3;
}

else if (keyboard_check(ord("A"))) {
    if (image_angle &gt; -3) image_angle -= animation_speed;
    else image_angle = -3;
}

else {
    if (image_angle &lt; -animation_speed*2) image_angle += animation_speed*2;
    else if (image_angle &gt; animation_speed*2) image_angle -= animation_speed*2;
    else image_angle = 0;
}

if(hitBy &gt;= 5)
{
    if(!global.achievement_damage)
    {
        global.upgrade_points += 1;
    }
    global.achievement_damage = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.score += other.damage*100;
bossHp -= other.damage;
with (other) instance_destroy();

hitBy += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
draw_set_font(fnt_big_num);
draw_set_valign(fa_center);
draw_set_halign(fa_right);

drawx = global.display_scale_x * (barOutline.x+barOutline.sprite_width-8);
drawy = global.display_scale_y * (barOutline.y+barOutline.sprite_height/2);
draw_text(drawx, drawy, string(round(bossHp)));
 
draw_set_halign(fa_left);
drawx = global.display_scale_x * (barOutline.x+5);
drawy = global.display_scale_y * (barOutline.y+barOutline.sprite_height/2);
draw_text(drawx, drawy, "BOSS");

draw_set_font(-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
