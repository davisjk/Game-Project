<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = window_get_width()/2;
y = 0;
bossHp = 100;
depth = 11;
image_xscale = 2;
image_yscale = 2;

alarm[0] = 5;

/* Boss's healthbar */
barOutline = instance_create(1450, 70, obj_healthbar_outline);
barFill = instance_create(1450, 70, obj_healthbar_fill);
barFill.depth = -100;
barOutline.depth = -101;
barFill.image_yscale = 0.6;
barOutline.image_yscale = 0.6;

bulletPattern = 0;
safespot = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Phase 3


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Phase 2


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Phase 1

var i;

if(bulletPattern == 0)
{
    for(i = 0; i &lt; 2*pi; i += pi/8)
    {
        scr_bullet_create(i, 0, y+sprite_height/2-20, 7, 100, obj_bullet_enemy, 10, 1);
    }
}
else if(bulletPattern == 1)
{
    for(i = pi/24; i &lt; 2*pi; i += pi/8)
    {
        scr_bullet_create(i, 0, y+sprite_height/2-20, 7, 0.00001, obj_bullet_enemy, 11, 1);
    }
}
else if(bulletPattern == 2)
{
    for(i = 0; i &lt; 2*pi; i += pi/8)
    {
        scr_bullet_create(i, 0, y+sprite_height/2-20, 7, 1, obj_bullet_enemy, 9, 1);
    }
}
else if(bulletPattern == 3)
{
    for(i = -pi/24; i &lt; 2*pi; i += pi/8)
    {
        scr_bullet_create(i, 0, y+sprite_height/2-20, 7, 3, obj_bullet_enemy, 10, 1);
    }
}
else if(bulletPattern == 4)
{
    for(i = -pi/12; i &lt; 2*pi; i += pi/8)
    {
        scr_bullet_create(i, 0, y+sprite_height/2-20, 7, 3, obj_bullet_enemy, 8, 1);
    }
}
/*
else if(bulletPattern == 5)
{
    scr_bullet_create(global.theta, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 10, 1);    
}
else if(bulletPattern == 6)
{
    for(i = 0; i &lt; 2*pi; i += pi/8)
    {
        scr_bullet_create(i, 0, y+sprite_height/2-20, 7, 3, obj_bullet_enemy, 8, 1);
    }
    //scr_bullet_create(global.theta, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 10, 1);    
}
else if(bulletPattern == 7)
{
    scr_bullet_create(global.theta, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 10, 1);    
}
else if(bulletPattern == 8)
{
    for(i = pi/24; i &lt; 2*pi; i += pi/8)
    {
        scr_bullet_create(i, 0, y+sprite_height/2-20, 7, 3, obj_bullet_enemy, 8, 1);
    }
    //scr_bullet_create(global.theta, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 10, 1);    
}
else if(bulletPattern == 9)
{
    scr_bullet_create(global.theta, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 10, 1);    
}
else if(bulletPattern == 10)
{
    for(i = -pi/12; i &lt; 2*pi; i += pi/8)
    {
        scr_bullet_create(i, 0, y+sprite_height/2-20, 7, 3, obj_bullet_enemy, 8, 1);
    }
    //scr_bullet_create(global.theta, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 10, 1);    
}
*/
//Fire ring of bullets
else if(bulletPattern == 10)//change to 6 above the last time we fired
{
    safespot = (global.theta + random_range(pi/2, 3*pi/2)) % (2*pi);
    for(i = 0; i &lt; 2*pi; i += pi/40)
    {
        
        if(abs(i-safespot) &gt; pi/10 &amp;&amp; abs(i-safespot) &lt; 19*pi/10)
        {
            scr_bullet_create(i, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 5, 1);
        }
        else if(abs(i-safespot) &gt; pi/20 &amp;&amp; abs(i-safespot) &lt; 39*pi/20)
        {
            scr_bullet_create(i, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 4, 1);
        }
        
    }
}

else if (bulletPattern = 12)// always two seconds after the ring
{
    scr_bullet_create(safespot + pi/60, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 5, 1);
    scr_bullet_create(safespot - pi/60, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 5, 1);  
    
    scr_bullet_create(safespot + pi/20, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 5, 1);
    scr_bullet_create(safespot - pi/20, 0, y+sprite_height/2-20, 7, 5, obj_bullet_enemy, 5, 1);    
}

else if(bulletPattern &gt;= 12)
{
    bulletPattern = -1;
}


bulletPattern += 1;

if(bossHp &lt; 67)
{
    alarm[2] = 10;
}
else
{
    alarm[1] = 10;
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var new_bullet;
//new_bullet = scr_bullet_create(global.theta, 0, y+sprite_height/2-20, 10, 5, obj_bullet_enemy, 5, 1);
alarm[1] = 5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>barFill.image_xscale = bossHp / 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other) instance_destroy();
if (bossHp &gt; 0) {
    bossHp -= other.damage;
}
else
{
    global.victory = true;
    room_goto(rm_end);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
draw_set_font(fnt_big_num);
draw_set_valign(fa_center);

draw_set_halign(fa_right);
draw_text(barOutline.x+barOutline.sprite_width-8, barOutline.y+barOutline.sprite_height/2, string(bossHp));

draw_set_halign(fa_left);
draw_text(barOutline.x+5, barOutline.y+barOutline.sprite_height/2, "BOSS");

draw_set_font(-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
